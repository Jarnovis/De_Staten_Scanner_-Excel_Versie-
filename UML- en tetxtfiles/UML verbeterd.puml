@startuml
skinparam linetype ortho

class GUI_Search{
- gui_upload: GUI_Upload
- gui_commit: GUI_Commit
# connector: Connector
- frame: JFrame
- textField: JTextField
- searchButton: JButton
- uploadButton: JButton
- resultButton: JButton
- search: boolean
- rightData: RightData

+ GUI_Search(GUI_Upload, GUI_Commit, Connector, RightData, boolean)
- searchBar()
- actionSearchBar()
- searchButton()
- actionSearchButton()
- uploadButton()
- actionUploadButton()
- resultButton()
- actionResultButton()
}

class Connector{
- driver: WebDriver
- DATA: List<WebElement>
- url: String

+ open()
+ connect()
+ collect(): List<WebElement>
+ close()
+ getDriver(): WebDriver
}

class GUI_Upload{
# file: File
# frame: JFrame
- uploadButton: JButton
- submitButton: JButton
# sheets: SelectComboBox
# keySource: SelectComboBox
# excelPlacement: SelectComboBox
# website: SelectComboBox
- lastSheet: Object
- rightData: RightData
# submit: boolean
- sheet: TextString
- keySourceText: TextString
- coupleSourceText: TextString
- websiteText: TextString

+ GUI_Upload(RightData)
- uploadButton()
- actionUploadButton()
- submitButton()
- actionSubmitButton()
# updateMatchFailBoxes()
}

class GUI_Commit{
# frame: JFrame
- matches: ScrollField
- noMatches: ScrollField
- matchText: TextString
- noMatchText: TextString

+ GUI_Commit()
# updateMatchesBox(RightData, JComboBox, JcomboBox)
# updateNoMatchesBox(RightData)
}

class ScrollField{
- field: JTextField
- scroll: JScrollPane
- info: String

+ ScrollField(int[])
}

class RightData{
- file: File
- keySources: ArrayList<ArrayList>
- noMatches: ArrayList<Object>
- dataSources: ArrayList<ArrayList>
- collected: ArrayList<ArrayList<ArrayList<String>>>
- firstRow: ArrayList<ArrayList>
- matches: ArrayList<ArrayList>
- keySource: String
- passFound: boolean
- DATA: List<WebElement>

- createWorkBook()
+ readFile(String, String): ArrayList<ArrayList>
+ gatherKeySource(String, String)
+ gatherDataSource(String, String)
+ getData(Connector)
+ checkData(String, String)
}

class Writer{
- workbook: WorkBook
- collection: WorkSheetCollection

+ Writer(RightData)
+ createSheet(String, String, String)
- emptyingWorksheet(Worksheet, String)
}

class GUI_Error{
- frame: JFrame
- button: JButton
- label: JLabel
- error: String
- message: String
- kindError: String

+ GUI_Error(String, String, String)
- errorDisplay()
- acceptButton()
- actionAcceptButton()
}

class GUI_Updater{
+ doInBackGround(): String
}

class TextString{
- label: JLabel

+ TextString(String, boolean, int[])
}

class SelectComboBox{
- comboBox: JComboBox
- choices: String[]
- collection: WorkSheetCollection

+ SelectComboBox(String[])
- comboBox()
+ updateComboBoxSheets(File)
+ updateComboBoxKeySource(SelectComboBox)
+ updateComboBoxExcelPlacement(SelectComboBox, SelectComboBox)
+ updateComboBoxWebsite(SelectComboBox, RightData)
}

interface IGUI{
+ window()
+ placement()
}


GUI_Search <|---o GUI_Upload : 1 doorsturen 1
GUI_Search <|---o GUI_Commit : 1 doorsturen 1
GUI_Search <|---o GUI_Error : 1 doorsturen 1..*
GUI_Search ---> GUI_Updater : 1 update 1

GUI_Search ---> Connector : 1 verbinden 1
GUI_Search ---> RightData : 1 verwerking 1

GUI_Commit ---> ScrollField : 1 velden 1..*
GUI_Commit ---> TextString : 1 text 1..*

GUI_Commit ---> Writer : 1 geeft toegang 1

GUI_Upload ---> SelectComboBox : 1 keuze box 1..*
GUI_Upload ---> TextString : 1 geeft tekst 1..*
GUI_Upload ---> GUI_Updater : 1 update 1

IGUI <|..GUI_Search
IGUI <|.. GUI_Commit
IGUI <|.. GUI_Error
IGUI <|.. GUI_Upload




@enduml
